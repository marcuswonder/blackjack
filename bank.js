// Constants -- Constants -- Constants -- Constants -- Constants //

const playersData = {
    '1': {
        name: 'Player',
        score: 0
    },
    '-1': {
        name: 'Dealer',
        score: 0
    }
}

const cards = [
    {name: '2Hearts', value: 2, suit: 'hearts', cardClass: 'value'},
    {name: '3Hearts', value: 3, suit: 'hearts', cardClass: 'value'},
    {name: '4Hearts', value: 4, suit: 'hearts', cardClass: 'value'},
    {name: '5Hearts', value: 5, suit: 'hearts', cardClass: 'value'},
    {name: '6Hearts', value: 6, suit: 'hearts', cardClass: 'value'},
    {name: '7Hearts', value: 7, suit: 'hearts', cardClass: 'value'},
    {name: '8Hearts', value: 8, suit: 'hearts', cardClass: 'value'},
    {name: '9Hearts', value: 9, suit: 'hearts', cardClass: 'value'},
    {name: '10Hearts', value: 10, suit: 'hearts', cardClass: 'value'},
    {name: 'jackHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
    {name: 'queenHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
    {name: 'kingHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
    {name: 'aceHearts', value: 11, suit: 'hearts', cardClass: 'ace'},
    
    {name: '2Spades', value: 2, suit: 'spades', cardClass: 'value'},
    {name: '3Spades', value: 3, suit: 'spades', cardClass: 'value'},
    {name: '4Spades', value: 4, suit: 'spades', cardClass: 'value'},
    {name: '5Spades', value: 5, suit: 'spades', cardClass: 'value'},
    {name: '6Spades', value: 6, suit: 'spades', cardClass: 'value'},
    {name: '7Spades', value: 7, suit: 'spades', cardClass: 'value'},
    {name: '8Spades', value: 8, suit: 'spades', cardClass: 'value'},
    {name: '9Spades', value: 9, suit: 'spades', cardClass: 'value'},
    {name: '10Spades', value: 10, suit: 'spades', cardClass: 'value'},
    {name: 'jackSpades', value: 10, suit: 'spades', cardClass: 'picture'},
    {name: 'queenSpades', value: 10, suit: 'spades', cardClass: 'picture'},
    {name: 'kingSpades', value: 10, suit: 'spades', cardClass: 'picture'},
    {name: 'aceSpades', value: 11, suit: 'spades', cardClass: 'ace'},
    
    {name: '2Clubs', value: 2, suit: 'clubs', cardClass: 'value'},
    {name: '3Clubs', value: 3, suit: 'clubs', cardClass: 'value'},
    {name: '4Clubs', value: 4, suit: 'clubs', cardClass: 'value'},
    {name: '5Clubs', value: 5, suit: 'clubs', cardClass: 'value'},
    {name: '6Clubs', value: 6, suit: 'clubs', cardClass: 'value'},
    {name: '7Clubs', value: 7, suit: 'clubs', cardClass: 'value'},
    {name: '8Clubs', value: 8, suit: 'clubs', cardClass: 'value'},
    {name: '9Clubs', value: 9, suit: 'clubs', cardClass: 'value'},
    {name: '10Clubs', value: 10, suit: 'clubs', cardClass: 'value'},
    {name: 'jackClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
    {name: 'queenClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
    {name: 'kingClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
    {name: 'aceClubs', value: 11, suit: 'clubs', cardClass: 'ace'},
    
    {name: '2Diamonds', value: 2, suit: 'diamonds', cardClass: 'value'},
    {name: '3Diamonds', value: 3, suit: 'diamonds', cardClass: 'value'},
    {name: '4Diamonds', value: 4, suit: 'diamonds', cardClass: 'value'},
    {name: '5Diamonds', value: 5, suit: 'diamonds', cardClass: 'value'},
    {name: '6Diamonds', value: 6, suit: 'diamonds', cardClass: 'value'},
    {name: '7Diamonds', value: 7, suit: 'diamonds', cardClass: 'value'},
    {name: '8Diamonds', value: 8, suit: 'diamonds', cardClass: 'value'},
    {name: '9Diamonds', value: 9, suit: 'diamonds', cardClass: 'value'},
    {name: '10Diamonds', value: 10, suit: 'diamonds', cardClass: 'value'},
    {name: 'jackDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
    {name: 'queenDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
    {name: 'kingDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
    {name: 'aceDiamonds', value: 11, suit: 'diamonds', cardClass: 'ace'}
]

let dealtCards = []


// Game States -- Game States -- Game States -- Game States -- Game States //

let phase, turn, playerScore, dealerScore, winner




/*----- cached element references -----*/
const startBtnEl = document.querySelector('.start-button')
const hitBtnEl = document.querySelector('.hit-button')
const holdBtnEl = document.querySelector('.hold-button')
const MessageEl = document.querySelector('.message')





// Event Listeners -- Event Listeners -- Event Listeners -- Event Listeners -- Event Listeners //
startBtnEl.addEventListener('click', startClick())

hitBtnEl.addEventListener('click', hitClick())

holdBtnEl.addEventListener('click', holdClick())


/*----- functions -----*/
function startClick() {
    turn = 1
    phase = null
    playerScore = 0
    dealerScore = 0
    winner = null
    dealtCards = []
}

function hitClick(){

}

function holdClick() {

}

// randomCard function selects a random card from the cards array - working!
let randomCard = null
function randomCardDraw() {
    randomCard = cards[Math.floor(Math.random()*cards.length)];
}
randomCardDraw()
let drawnCardIndex = cards.indexOf(randomCard)
let drawnCard = randomCard
console.log(drawnCardIndex)
console.log(drawnCard)


// Function called assignDrawnCard that pushes randomly selected items from randomCardDraw (drawnCardIndex) and pushing 
// it to a new array called 'dealtCards' - working!
dealtCards.push(drawnCard)
console.log(dealtCards)


// Function called assignDrawnCard that removes randomly selected items from randomCardDraw (drawnCardIndex) from the 
// original array called 'cards' - not working!
cards.splice(drawnCardIndex, 1);
console.log(cards)


// Function checks dealtCards array for provided parameter - working!
function checkCardClass(cardClass) {
    if(dealtCards.find(item => item.cardClass === 'cardClass') === cardClass)
    return true
}

// Function sums the total of all 'value' properties in dealtCards array - working!
let sumDealtCards = function(dealtCards, value){
    return dealtCards.reduce(function(a, b){
        return a + b[value]
    }, 0)
}

let dealtCardsTotal = sumDealtCards(dealtCards, 'value')
console.log(dealtCardsTotal)


// Function inputs ace and picture class into the checkCardClass function, and checks that the total of the 
// dealtCardsTotal function is less than 21 to check for Blackjack - working!
function checkBlackjack() {
    if(checkCardClass('ace') === true && checkCardClass('picture') === true && dealtCardsTotal <= 21)
        return true
    else {
        return false
    }
}
checkBlackjack()
console.log(checkBlackjack())

// Function check total value of dealtCardsTotal and drives the "Bust" message if greater than 21 - working!
function checkBust() {
    if(dealtCardsTotal > 21) {
        console.log("Bust!") // Temporary placeholder
    } else {
        console.log("Not Bust!") // Temporary placeholder
    }
}

checkBust()




















// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// ////////////////////////////////////// //////////////////////////////////////








// // Constants -- Constants -- Constants -- Constants -- Constants //

// const playersData = {
//     '1': {
//         name: 'Player',
//         score: 0
//     },
//     '-1': {
//         name: 'Dealer',
//         score: 0
//     }
// }

// const cards = [
//     {name: '2Hearts', value: 2, suit: 'hearts', cardClass: 'value'},
//     {name: '3Hearts', value: 3, suit: 'hearts', cardClass: 'value'},
//     {name: '4Hearts', value: 4, suit: 'hearts', cardClass: 'value'},
//     {name: '5Hearts', value: 5, suit: 'hearts', cardClass: 'value'},
//     {name: '6Hearts', value: 6, suit: 'hearts', cardClass: 'value'},
//     {name: '7Hearts', value: 7, suit: 'hearts', cardClass: 'value'},
//     {name: '8Hearts', value: 8, suit: 'hearts', cardClass: 'value'},
//     {name: '9Hearts', value: 9, suit: 'hearts', cardClass: 'value'},
//     {name: '10Hearts', value: 10, suit: 'hearts', cardClass: 'value'},
//     {name: 'jackHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
//     {name: 'queenHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
//     {name: 'kingHearts', value: 10, suit: 'hearts', cardClass: 'picture'},
//     {name: 'aceHearts', value: 11, suit: 'hearts', cardClass: 'ace'},
    
//     {name: '2Spades', value: 2, suit: 'spades', cardClass: 'value'},
//     {name: '3Spades', value: 3, suit: 'spades', cardClass: 'value'},
//     {name: '4Spades', value: 4, suit: 'spades', cardClass: 'value'},
//     {name: '5Spades', value: 5, suit: 'spades', cardClass: 'value'},
//     {name: '6Spades', value: 6, suit: 'spades', cardClass: 'value'},
//     {name: '7Spades', value: 7, suit: 'spades', cardClass: 'value'},
//     {name: '8Spades', value: 8, suit: 'spades', cardClass: 'value'},
//     {name: '9Spades', value: 9, suit: 'spades', cardClass: 'value'},
//     {name: '10Spades', value: 10, suit: 'spades', cardClass: 'value'},
//     {name: 'jackSpades', value: 10, suit: 'spades', cardClass: 'picture'},
//     {name: 'queenSpades', value: 10, suit: 'spades', cardClass: 'picture'},
//     {name: 'kingSpades', value: 10, suit: 'spades', cardClass: 'picture'},
//     {name: 'aceSpades', value: 11, suit: 'spades', cardClass: 'ace'},
    
//     {name: '2Clubs', value: 2, suit: 'clubs', cardClass: 'value'},
//     {name: '3Clubs', value: 3, suit: 'clubs', cardClass: 'value'},
//     {name: '4Clubs', value: 4, suit: 'clubs', cardClass: 'value'},
//     {name: '5Clubs', value: 5, suit: 'clubs', cardClass: 'value'},
//     {name: '6Clubs', value: 6, suit: 'clubs', cardClass: 'value'},
//     {name: '7Clubs', value: 7, suit: 'clubs', cardClass: 'value'},
//     {name: '8Clubs', value: 8, suit: 'clubs', cardClass: 'value'},
//     {name: '9Clubs', value: 9, suit: 'clubs', cardClass: 'value'},
//     {name: '10Clubs', value: 10, suit: 'clubs', cardClass: 'value'},
//     {name: 'jackClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
//     {name: 'queenClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
//     {name: 'kingClubs', value: 10, suit: 'clubs', cardClass: 'picture'},
//     {name: 'aceClubs', value: 11, suit: 'clubs', cardClass: 'ace'},
    
//     {name: '2Diamonds', value: 2, suit: 'diamonds', cardClass: 'value'},
//     {name: '3Diamonds', value: 3, suit: 'diamonds', cardClass: 'value'},
//     {name: '4Diamonds', value: 4, suit: 'diamonds', cardClass: 'value'},
//     {name: '5Diamonds', value: 5, suit: 'diamonds', cardClass: 'value'},
//     {name: '6Diamonds', value: 6, suit: 'diamonds', cardClass: 'value'},
//     {name: '7Diamonds', value: 7, suit: 'diamonds', cardClass: 'value'},
//     {name: '8Diamonds', value: 8, suit: 'diamonds', cardClass: 'value'},
//     {name: '9Diamonds', value: 9, suit: 'diamonds', cardClass: 'value'},
//     {name: '10Diamonds', value: 10, suit: 'diamonds', cardClass: 'value'},
//     {name: 'jackDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
//     {name: 'queenDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
//     {name: 'kingDiamonds', value: 10, suit: 'diamonds', cardClass: 'picture'},
//     {name: 'aceDiamonds', value: 11, suit: 'diamonds', cardClass: 'ace'}
// ]

// let cardsDealtToPlayer = []
// let cardsDealtToDealer = []
// let randomCard = null


// // Game States -- Game States -- Game States -- Game States -- Game States //

// let dealtCards, phase, turn, playerScore, dealerScore, winner




// /*----- cached element references -----*/
// const startBtnEl = document.querySelector('.start-button')
// const hitBtnEl = document.querySelector('.hit-button')
// const holdBtnEl = document.querySelector('.hold-button')
// const MessageEl = document.querySelector('.message')





// // Event Listeners -- Event Listeners -- Event Listeners -- Event Listeners -- Event Listeners //
// startBtnEl.addEventListener('click', startClick)

// hitBtnEl.addEventListener('click',hitClick)

// holdBtnEl.addEventListener('click', holdClick)


// /*----- functions -----*/
// function init() {
//     phase = "not in play"
//     turn = 1
//     playerScore = 0
//     dealerScore = 0
//     winner = null
//     cardsDealtToPlayer = []
//     cardsDealtToDealer = []
// }


// function startClick() {
//     // console.log(cardsDealtToPlayer)
//     // console.log(cardsDealtToDealer)
//     // console.log(cards)
//     init()
//     phase = "in-play"
//     randomCardDraw()
//     randomCardDraw()
//     changeTurn()
//     randomCardDraw()
//     randomCardDraw()
//     // console.log(cardsDealtToPlayer)
//     // console.log(cardsDealtToDealer)
//     // console.log(cards)
// }



// function hitClick(){
//     hitBtnEl.onclick = randomCardDraw()
//     // alert("Hit Button Clicked!")
//     console.log(cardsDealtToPlayer)
//     console.log(cardsDealtToDealer)
//     console.log(cards)
//     console.log(turn)
// }

// function holdClick() {
//     changeTurn()
//     console.log(turn)
// }

// function changeTurn() {
//     turn *= -1
//     dealerPlay()
// }

// function dealerPlay() {

// }

// // Function selects a random object from the 'cards' array, assigns that object to the 
// // 'dealtCards' array and removes it from the 'cards' array.
// function randomCardDraw() {
//     randomCard = cards[Math.floor(Math.random()*cards.length)]
//     let randomCardIndex = cards.indexOf(randomCard)
//         cards.splice(randomCardIndex, 1);
//     if(turn === 1) {
//         cardsDealtToPlayer.push(randomCard)
//     } else if(turn === -1) {
//         cardsDealtToDealer.push(randomCard)
//     }
// }
// // randomCardDraw()
// // console.log(cards)


// // // Function checks dealtCards array for provided parameter - working! - 
// // function checkCardClass(cardClass) {
// //     if(dealtCards.find(item => item.cardClass === 'cardClass') === cardClass)
// //     return true
// // }

// // Function checks cardsDealtToPlayer and cardsDealtToDealer arrays for provided parameter - working!
// function checkCardClass(cardClass) {
//     if( turn === 1) {
//         if(cardsDealtToPlayer.find(item => item.cardClass === 'cardClass') === cardClass)
//         return true
//     } else if (turn === -1) {
//         if(cardsDealtToDealer.find(item => item.cardClass === 'cardClass') === cardClass)
//         return true
//     }
// }

// // // // Function sums the total of all 'value' properties in dealtCards array - working!
// // let sumDealtCards = function(dealtCards, value){
// //     return dealtCards.reduce(function(a, b){
// //         return a + b[value]
// //     }, 0)
// // }

// // let dealtCardsTotal = sumDealtCards(dealtCards, 'value')
// // console.log(dealtCardsTotal)

// // // Function sums the total of all 'value' properties in dealtCards array - working!
// let sumDealtCards = function(dealtCards, value){
//     return dealtCards.reduce(function(a, b){
//         return a + b[value]
//     }, 0)
// }

// let dealtCardsTotal = sumDealtCards(dealtCards, 'value')
// console.log(dealtCardsTotal)



// // Function inputs ace and picture class into the checkCardClass function, and checks that  
// // the total of the dealtCardsTotal function is less than 21 to check for Blackjack - working!
// function checkBlackjack() {
//     if(checkCardClass('ace') === true && checkCardClass('picture') === true && dealtCardsTotal <= 21)
//         return true
//     else {
//         return false
//     }
// }
// checkBlackjack()
// console.log(checkBlackjack())

// // Function check total value of dealtCardsTotal and drives the "Bust" message if greater than 21 - working!
// function checkBust() {
//     if(dealtCardsTotal > 21) {
//         console.log("Bust!") // Temporary placeholder
//     } else {
//         console.log("Not Bust!") // Temporary placeholder
//     }
// }

// // checkBust()




// // Start Game
// // startClick()